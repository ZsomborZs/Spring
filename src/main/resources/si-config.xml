<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
        http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
        http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
        ">

	<int:gateway id="SI_Service" service-interface="core.SI_Service">
		<int:method name="listAllPeople" request-channel="peopleRequestChannel"
			request-timeout="1000" />
		<int:method name="addPerson" request-channel="personRegistrationRequestChannel" />
		<int:method name="getPerson" request-channel="personRequestChannel"
			request-timeout="1000" />
		<int:method name="deletePerson" request-channel="personRemoveChannel"
			request-timeout="1000" />
	</int:gateway>

	<int:channel id="personRequestChannel" />
	<int:channel id="personRemoveChannel" />
	<int:channel id="personRegistrationRequestChannel" />
	<int:channel id="peopleRequestChannel" />
	<int:channel id="stdOutHTTPChannel" />

	<int-stream:stdout-channel-adapter
		id="stdOutAdapter" channel="stdOutHTTPChannel" append-newline="true" />

	<!--int-http:inbound-gateway request-channel="personRequestChannel" url="http://localhost:8090/getpeople?name={n}" 
		http-method="GET" expected-payload-type="struct.Person"> <int-http:uri-variable 
		name="n" expression="payload"/> </int-http:inbound-gateway -->

	<int-http:outbound-gateway request-channel="personRequestChannel"
		url="http://localhost:8080/web/find?name={n}" http-method="GET"
		expected-response-type="struct.Person">
		<int-http:uri-variable name="n" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="personRemoveChannel"
		url="http://localhost:8080/web/delete?name={n}" http-method="GET"
		expected-response-type="struct.Person" reply-channel="stdOutHTTPChannel">
		<int-http:uri-variable name="n" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="peopleRequestChannel"
		url="http://localhost:8080/web/people/all" http-method="GET"
		expected-response-type="struct.Person[]">
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="personRegistrationRequestChannel"
		url="http://localhost:8080/web/person/register?fn={fn}&amp;ln={ln}&amp;gender={gender}&amp;birth={birth}"
		http-method="GET" reply-channel="stdOutHTTPChannel"
		expected-response-type="java.lang.String">

		<int-http:uri-variable name="fn"
			expression="payload.getFirstName()" />
		<int-http:uri-variable name="ln"
			expression="payload.getLastName()" />
		<int-http:uri-variable name="gender" 
			expression="payload.getSex()" />
		<int-http:uri-variable name="birth"
			expression="(new java.text.SimpleDateFormat('yyyy-MM-dd')).format(payload.getBirthDate())" />
	</int-http:outbound-gateway>

</beans>